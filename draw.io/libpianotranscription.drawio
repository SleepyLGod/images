<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MidiMessage&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- type: int&lt;br/&gt;- b: int&lt;br/&gt;- c: int&lt;br/&gt;- a: float&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; b: int&lt;br/&gt; c: int&lt;br/&gt; a: float&lt;br/&gt; type: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MidiMessage(float, int, int, int): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="432" y="-14" width="247" height="285" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MidiWriter&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ writeEventsToMidi(int, List&amp;lt;NoteEvent&amp;gt;, List&amp;lt;PedalEvent&amp;gt;): byte[]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MidiWriter(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="442" y="300" width="467" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;NoteEvent&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- onsetTime: float&lt;br/&gt;- velocity: int&lt;br/&gt;- midiNote: int&lt;br/&gt;- offsetTime: float&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; onsetTime: float&lt;br/&gt; offsetTime: float&lt;br/&gt; velocity: int&lt;br/&gt; midiNote: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ NoteEvent(float, float, int, int): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="724" y="-14" width="243" height="285" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PedalEvent&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- onsetTime: float&lt;br/&gt;- offsetTime: float&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; offsetTime: float&lt;br/&gt; onsetTime: float&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PedalEvent(float, float): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="853" y="418" width="197" height="173" as="geometry" />
    </mxCell>
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RegressionPostProcessor&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- outputDictToDetectedNotes(Map&amp;lt;String, float[][]&amp;gt;): List&amp;lt;float[]&amp;gt;&lt;br/&gt;- add2ArraysAndDivide(float[], float[], int): float[]&lt;br/&gt;- noteDetectionWithOnsetOffsetRegress(float[], float[], float[], float[], float[], float[], float): List&amp;lt;float[]&amp;gt;&lt;br/&gt;- stack4ArraysToList(float[], float[], float[], float[]): List&amp;lt;float[]&amp;gt;&lt;br/&gt;+ outputDictToMidiEvents(Map&amp;lt;String, float[][]&amp;gt;): List&amp;lt;Object&amp;gt;&lt;br/&gt;- is_monotonic_neighbour(float[], int, int): boolean&lt;br/&gt;- detectedNotesToEvents(List&amp;lt;float[]&amp;gt;): List&amp;lt;NoteEvent&amp;gt;&lt;br/&gt;- extract2DElementsOf2DArray(float[][], int): float[]&lt;br/&gt;- stack2ArraysToList(float[], float[]): List&amp;lt;float[]&amp;gt;&lt;br/&gt;- read2DArray(float[][], int, int, int, int): float[][]&lt;br/&gt;- detectedPedalsToEvents(List&amp;lt;float[]&amp;gt;): List&amp;lt;PedalEvent&amp;gt;&lt;br/&gt;- getBinarizedOutputFromRegression(float[][], float, int): List&amp;lt;float[][]&amp;gt;&lt;br/&gt;- pedalDetectionWithOnsetOffsetRegress(float[], float[], float[], double): List&amp;lt;float[]&amp;gt;&lt;br/&gt;- write2DArray(float[][], float[][], int, int, int, int): void&lt;br/&gt;- outputDictToDetectedPedals(Map&amp;lt;String, float[][]&amp;gt;): List&amp;lt;float[]&amp;gt;&lt;br/&gt;- listToArray(List&amp;lt;float[]&amp;gt;): float[][]&lt;br/&gt;- listToArray2(List&amp;lt;Float&amp;gt;): float[]&lt;br/&gt;- outputDictToNotePedalArrays(Map&amp;lt;String, float[][]&amp;gt;): List&amp;lt;List&amp;lt;float[]&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RegressionPostProcessor(int, int, float, float, float, float): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-125" y="-14" width="512" height="564" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Transcriptor&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- deframe(List&amp;lt;float[][]&amp;gt;): float[][]&lt;br/&gt;- write2DArray(float[][], float[][], int, int, int, int): void&lt;br/&gt;+ transcript(float[]): byte[]&lt;br/&gt;- read2DArray(float[][], int, int, int, int): float[][]&lt;br/&gt;- forward(List&amp;lt;float[]&amp;gt;): Map&amp;lt;String, List&amp;lt;float[][]&amp;gt;&amp;gt;&lt;br/&gt;- enframe(float[], int): List&amp;lt;float[]&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Transcriptor(String): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="442" y="418" width="380" height="228" as="geometry" />
    </mxCell>
  </root>
</mxGraphModel>